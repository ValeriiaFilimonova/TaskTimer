buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.72"
    }
}

plugins {
    id 'org.jetbrains.kotlin.multiplatform' version '1.3.72'
    id "org.jetbrains.kotlin.kapt" version "1.3.72"
}

group 'time.manage'
version '1.0'

repositories {
    mavenCentral()
}

apply plugin: "org.jetbrains.kotlin.kapt"

kotlin {
    /* Targets configuration omitted. 
    *  To find out how to configure the targets, please follow the link:
    *  https://kotlinlang.org/docs/reference/building-mpp-with-gradle.html#setting-up-targets */

    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')
            }
        }
        commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
            }
        }
        jvmMain {
            dependsOn(getByName('commonMain'))

            dependencies {
                implementation kotlin('stdlib-jdk8')
                implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.72"
                implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.4"

                api('net.sf.sociaal:freetts:1.2.2')
                api('com.googlecode.lanterna:lanterna:3.0.2')
                api('info.picocli:picocli:4.2.0')
            }

            kapt {
                arguments {
                    arg("project", "${project.group}/${project.name}")
                }
            }
        }
        jvmTest {
            dependsOn(getByName('commonTest'))

            dependencies {
                implementation(kotlin("test-junit5"))
                implementation('org.assertj:assertj-core:3.15.0')
                implementation('io.mockk:mockk:1.9.3')
            }
        }

        jvm() {
            withJava()
            jvmJar {
                manifest {
                    attributes 'Main-Class': 'MainKt'
                }
                from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
            }
        }
    }
}